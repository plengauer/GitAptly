#!/bin/bash -e
source /opt/gitaptly/env
if [ -f /usr/bin/opentelemetry_shell.sh ]; then
  export OTEL_SERVICE_NAME=GitAptly
  export OTEL_SHELL_TRACES_ENABLE=TRUE
  export OTEL_EXPORTER_OTLP_TRACES_ENDPOINT="$OTLP_TRACES_ENDPOINT"
  export OTEL_EXPORTER_OTLP_TRACES_HEADERS=authorization=$(echo "$OTLP_TRACES_HEADER" | jq -Rr @uri)
  export OTEL_SHELL_METRICS_ENABLE=TRUE
  export OTEL_EXPORTER_OTLP_METRICS_ENDPOINT="$OTLP_METRICS_ENDPOINT"
  export OTEL_EXPORTER_OTLP_METRICS_HEADERS=authorization=$(echo "$OTLP_METRICS_HEADER" | jq -Rr @uri)
  export OTEL_SHELL_LOGS_ENABLE=TRUE
  export OTEL_EXPORTER_OTLP_LOGS_ENDPOINT="$OTLP_LOGS_ENDPOINT"
  export OTEL_EXPORTER_OTLP_LOGS_HEADERS=authorization=$(echo "$OTLP_LOGS_HEADER" | jq -Rr @uri)
  source /usr/bin/opentelemetry_shell.sh
fi
cd /var/lib/gitaptly

source /opt/gitaptly/env

# TODO handle if one mode is switched to the other (packages and evrything needs to be cleared and fully re-initialized)
# TODO clean if deb packages are remove
# TODO better recovery in proxy mode, check if Packages is there, and if not, redo a full scan

cat /etc/gitaptly.conf | xargs -I {} mkdir -p pool/main/{}
if [ "$MODE" = 'cache' ]; then
  cat /etc/gitaptly.conf | sort -R | parallel bash -c 'gitaptly_scan {} | xargs wget -nc -P /pool/main/{}/'
  dpkg-scanpackages --multiversion pool/ > dists/stable/main/binary-all/Packages
elif [ "$MODE" = 'proxy' ]; then
  gitaptly_proxy_process_url() {
    if [ -f /usr/bin/opentelemetry_shell.sh ]; then source /usr/bin/opentelemetry_shell.sh; fi
    set -e
    url="$*"
    owner="$(echo "$url" | cut -d "/" -f 4)"
    repo="$(echo "$url" | cut -d "/" -f 5)"
    file="$(echo "$url" | rev | cut -d "/" -f 1 | rev)"
    if [ -f cgi-bin/main/"$owner"/"$repo"/"$file" ]; then return 0; fi
    wget -nc -O pool/main/"$owner"/"$repo"/"$file" "$url"
    dpkg-scanpackages --multiversion pool/main/$owner/$repo/$file \
      | sed "s/Filename: .*/Filename: cgi-bin\/main\/$owner\/$repo\/$file/" \
      | flock dists/stable/main/binary-all/Packages tee -a dists/stable/main/binary-all/Packages > /dev/null
    rm pool/main/"$owner"/"$repo"/"$file"
    ln --symbolic /usr/bin/gitaptly_serve cgi-bin/main/"$owner"/"$repo"/"$file"
  }
  export -f gitaptly_proxy_process_url
  touch dists/stable/main/binary-all/Packages
  cat /etc/gitaptly.conf | xargs -I {} mkdir -p cgi-bin/main/{}
  cat /etc/gitaptly.conf | sort -R | parallel gitaptly_scan | parallel gitaptly_proxy_process_url
else
  exit 1
fi

gzip -9 < dists/stable/main/binary-all/Packages > dists/stable/main/binary-all/Packages.gz
gitaptly_create_release dists/stable > dists/stable/Release
